include_directories(${PROJECT_SOURCE_DIR}/src)
include_directories(${PROJECT_BINARY_DIR}/bin/gen)
include_directories(${PROJECT_SOURCE_DIR}/frameworks)
if(USE_CAFFE2)
include_directories(${PROJECT_SOURCE_DIR}/frameworks/caffe2)
include_directories(${PROJECT_SOURCE_DIR}/frameworks/caffe2/caffe2/core)
include_directories(${PROJECT_SOURCE_DIR}/frameworks/caffe2/build)
endif()
if(USE_DARKNET)
include_directories(${PROJECT_SOURCE_DIR}/frameworks/darknet/src)
endif()
if(USE_TENSORFLOW)
include_directories(${PROJECT_SOURCE_DIR}/frameworks/tensorflow)
endif()
if(USE_CAFFE)
###
endif()
set(BACKEND_SRCS backend_server.cpp backup_client.cpp batch_task.cpp caffe2_model.cpp caffe_densecap_model.cpp caffe_model.cpp darknet_model.cpp gpu_executor.cpp model_exec.cpp model_ins.cpp postprocess.cpp rpc_service.cpp share_prefix_model.cpp slice.cpp task.cpp tensorflow_model.cpp worker.cpp)
add_library(backend_lib ${BACKEND_SRCS})
add_executable(backend backend_main.cpp)

target_link_libraries(backend_lib proto common frameworks ${LD_FLAGS} ${BACKEND_LD_FLAGS})
target_link_libraries(backend proto common backend_lib frameworks ${LD_FLAGS} ${BACKEND_LD_FLAGS})
set_target_properties(backend_lib PROPERTIES OUTPUT_NAME "backend_lib")
set_target_properties(backend PROPERTIES OUTPUT_NAME "backend")

