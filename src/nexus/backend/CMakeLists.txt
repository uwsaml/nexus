include_directories(${PROJECT_SOURCE_DIR}/src)
include_directories(${PROJECT_BINARY_DIR}/bin/gen)
#include_directories(${PROJECT_SOURCE_DIR}/frameworks)
if(USE_CAFFE2)
#include_directories(${PROJECT_SOURCE_DIR}/frameworks/caffe2)
#include_directories(${PROJECT_SOURCE_DIR}/frameworks/caffe2/caffe2/core)
#include_directories(${PROJECT_SOURCE_DIR}/frameworks/caffe2/build)
include_directories(${PROJECT_SOURCE_DIR}/frameworks/caffe2/install/include)
endif()
if(USE_DARKNET)
include_directories(${PROJECT_SOURCE_DIR}/frameworks/darknet/src)
endif()
if(USE_TENSORFLOW)
include_directories(${PROJECT_SOURCE_DIR}/frameworks/tensorflow)
include_directories(${TENSORFLOW_BUILD_DIR}/include/tensorflow)
include_directories(${TENSORFLOW_BUILD_DIR}/include/tensorflow/tensorflow/contrib/makefile/downloads)
include_directories(${TENSORFLOW_BUILD_DIR}/include/tensorflow/tensorflow/contrib/makefile/downloads/eigen)
include_directories(${TENSORFLOW_BUILD_DIR}/include/tensorflow/tensorflow/contrib/makefile/downloads/gemmlowp)
include_directories(${TENSORFLOW_BUILD_DIR}/include/tensorflow/tensorflow/contrib/makefile/downloads/nsync/public)
endif()
if(USE_CAFFE)
###
endif()
set(BACKEND_SRCS backend_server.cpp backup_client.cpp batch_task.cpp caffe2_model.cpp caffe_densecap_model.cpp caffe_model.cpp darknet_model.cpp gpu_executor.cpp model_exec.cpp model_ins.cpp postprocess.cpp rpc_service.cpp share_prefix_model.cpp slice.cpp task.cpp tensorflow_model.cpp worker.cpp)
add_library(backend_lib SHARED ${BACKEND_SRCS})
add_executable(backend backend_main.cpp)
set(CMAKE_PREFIX_PATH "${CMAKE_PREFIX_PATH};${PROJECT_SOURCE_DIR}/frameworks/caffe2/install/lib/;${PROJECT_SOURCE_DIR}/frameworks/darknet/;${PROJECT_SOURCE_DIR}/frameworks/tensorflow/build/lib/tensorflow/")
target_link_libraries(backend_lib ${LD_FLAGS} ${BACKEND_LD_FLAGS})
target_link_libraries(backend ${LD_FLAGS} ${BACKEND_LD_FLAGS})
if(USE_CAFFE2)
	add_library(caffe2_gpu SHARED IMPORTED)
  set_property(TARGET caffe2_gpu PROPERTY IMPORTED_LOCATION "${PROJECT_SOURCE_DIR}/frameworks/caffe2/install/lib/libcaffe2_gpu.so")
  add_library(caffe2 SHARED IMPORTED)
  set_property(TARGET caffe2 PROPERTY IMPORTED_LOCATION "${PROJECT_SOURCE_DIR}/frameworks/caffe2/install/lib/libcaffe2.so")
	target_link_libraries(backend_lib caffe2 caffe2_gpu "-Wl,-rpath,${CAFFE2_INSTALL_DIR}/lib")
	target_link_libraries(backend caffe2 caffe2_gpu "-Wl,-rpath,${CAFFE2_INSTALL_DIR}/lib")
endif()
if(USE_DARKNET)
	add_library(darknet SHARED IMPORTED)
  set_property(TARGET darknet PROPERTY IMPORTED_LOCATION "${PROJECT_SOURCE_DIR}/frameworks/darknet/libdarknet.so")
	target_link_libraries(backend_lib darknet)
	target_link_libraries(backend darknet)
endif()
if(USE_TENSORFLOW)
	add_library(tensorflow SHARED IMPORTED)
  set_property(TARGET tensorflow PROPERTY IMPORTED_LOCATION "${PROJECT_SOURCE_DIR}/frameworks/tensorflow/build/lib/tensorflow/libtensorflow_cc.so")
	target_link_libraries(backend_lib tensorflow)
	target_link_libraries(backend tensorflow)
endif()
if(USE_CAFFE)
	###
	target_link_libraries(backend_lib caffe)
	target_link_libraries(backend caffe)
endif()

target_link_libraries(backend_lib proto common ${LD_FLAGS} ${BACKEND_LD_FLAGS})
target_link_libraries(backend proto common backend_lib ${LD_FLAGS} ${BACKEND_LD_FLAGS})
set_target_properties(backend_lib PROPERTIES OUTPUT_NAME "backend_lib")
set_target_properties(backend PROPERTIES OUTPUT_NAME "backend")

